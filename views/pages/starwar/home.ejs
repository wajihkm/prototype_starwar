<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Star Wars</title>
  <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
  <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>

  <!-- Don't use this in production: -->
  <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

  <link rel="stylesheet" href="/styles/pages/test.css">

  <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">

  <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
    integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
</head>

<body class="body">
  <div class="container">
    <div class="row page">
      <div class="col">
        <img src="https://upload.wikimedia.org/wikipedia/commons/6/6c/Star_Wars_Logo.svg" alt="StarWar Logo"
          class="sw_logo" />
      </div>
    </div>
    <div id="root" class="page"></div>
  </div>

  <script type="text/babel">

    class Loading extends React.Component {
      render() {
        return this.props.isLoading
          ? <h5>Loading...</h5>
          : <div />
      }
    }

    class OneResult extends React.Component {
      render() {
        let html = Array.isArray(this.props.result)
          ? this.props.result.map((r, i) => <div key={i}>{r} <br /></div>)
          : this.props.result

        return (
          <div className="col">
            <h5>{this.props.title}</h5>
            <div className="result">{html}</div>
          </div>
        );
      }
    }

    class Results extends React.Component {
      render() {
        const html = this.props.answers.map(res => <OneResult key={res.id} title={res.title} result={res.result} />);

        return html;
      }
    }

    class StarwarButton extends React.Component {
      render() {
        return (
          <button className={'mbtn ' + (this.props.hide ? '' : 'active')} onClick={() => this.props.toggle()}>
            <i className="fa fa-star"></i>
            Do. Or do not. There is no try.
              <i className="fa fa-star"></i>
          </button>
        )
      }
    }


    class App extends React.Component {
      state = {
        answers: [
          {
            id: 1,
            fetched: false,
            title: 'Which of all StarWars movies has longest opening crawl?',
            result: ['longestCrawlFilm.title']
          },
          {
            id: 2,
            fetched: false,
            title: 'What character (person) appeared in the most of StarWars films?',
            result: ['popularCharacter.name']
          },
          {
            id: 3,
            fetched: false,
            title: 'What speices appeared in the most number of StarWars films?',
            result: ['popularSpecies 1', 'popularSpecies 2', "s.name + ' (' + s.count + ')'"]
          },
          {
            id: 4,
            fetched: true,
            title: 'What planet in StarWars universe provided largest number of vehicle pilots?',
            result: ['planetPilots 1', 'planetPilots 2']
            /*
              Planet: planet.name
              -
              Pilots: (planet.pilots.length)
              planet.pilotsStr
            */
          },
        ],
        hide: true,
        fetched: false
      }

      fetch = () => {
        this.setState({
          fetched: this.state.answers.reduce((acc, cur) => acc && cur, true)
        })
      }

      toggle = () => {
        this.setState({
          hide: !this.state.hide
        })
      };

      render() {
        let data = [];
        if (!this.state.hide && this.state.fetched) {
          data = this.state.answers;
        }

        return (
          <div>
            <div className="row">
              <div className="col">
                <StarwarButton toggle={this.toggle} hide={this.state.hide} />
              </div>
            </div>

            <div className="row">
              <div className="col">

                <Loading isLoading={!this.state.fetched && !this.state.hide} />
                <Results answers={data} />

              </div>
            </div>

          </div>
        )
      }

      componentDidMount() {
        fetch('/api/v1/starwar/longest-crawl-film')
          .then(results => results.json())
          .then(result => {
            console.log(result);

            this.state.answers[0].result = result.title;
            this.state.answers[0].fetched = true;

            this.fetch();
          })

        fetch('/api/v1/starwar/popular-character')
          .then(results => results.json())
          .then(result => {
            console.log(result);

            this.state.answers[1].result = result.name;
            this.state.answers[1].fetched = true;

            this.fetch();
          })

        fetch('/api/v1/starwar/popular-species')
          .then(results => results.json())
          .then(result => {
            console.log(result);

            this.state.answers[2].result = result.map(s => s.name + ' (' + s.count + ')');
            this.state.answers[2].fetched = true;

            this.fetch();
          })

      }
    }

    ReactDOM.render(<App />, document.getElementById('root'));

  </script>

</body>

</html>
